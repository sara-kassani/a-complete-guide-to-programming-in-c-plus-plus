In traditional programming:
    - the data and functions (subroutines, procedures) are kept seperate from the data they process;
    - data must be initialized with suitable values;
    - suitable data must be passed to a function when it is called;
    - functions must be modified according to the changes of data.


OOP (Object-Oriented Programming):
    - combines data (properties) and functions (capacities);
    - these combinations are placed within an objects' class.


Advantages of OOP:
    - reduced susceptibility to errors: an object controls access to its own data. More specifically, an object can reject erroneous access attempts;
    - easy re-use: objects maintain themselves and can therefore be used as building blocks for other programs;
    - low maintenance requirement: an object type can modify its own internal data representation without requiring changes to the application.